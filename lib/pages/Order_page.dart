import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:get/get_rx/src/rx_types/rx_types.dart';import 'package:google_fonts/google_fonts.dart';import 'package:loading_animations/loading_animations.dart';import 'package:nakhla_project/pages/text_Field.dart';import 'package:unicons/unicons.dart';import 'package:url_launcher/url_launcher.dart';import 'package:whatsapp_unilink/whatsapp_unilink.dart';import 'package:pdf/widgets.dart' as pw;import 'dart:io';class Ordert_page extends StatefulWidget {  const Ordert_page({Key? key}) : super(key: key);  @override  State<Ordert_page> createState() => _Ordert_pageState();}final TextEditingController order_number = TextEditingController();final TextEditingController order_Date = TextEditingController();final TextEditingController order_name = TextEditingController();final TextEditingController order_type = TextEditingController();final TextEditingController order_details = TextEditingController();final TextEditingController order_address = TextEditingController();final TextEditingController order_phone_number = TextEditingController();final TextEditingController order_price = TextEditingController();final TextEditingController order_Notes = TextEditingController();final RxString typed_order_number = ''.obs;final RxString typed_order_Date = ''.obs;final RxString typed_order_name = ''.obs;final RxString typed_order_type = ''.obs;final RxString typed_order_details = ''.obs;final RxString typed_order_address = ''.obs;final RxString typed_order_phone_number = ''.obs;final RxString typed_order_price = ''.obs;final RxString typed_oorder_Notes = ''.obs;RxBool flag = false.obs;RxBool swich2 = false.obs;class _Ordert_pageState extends State<Ordert_page> {  @override  Widget build(BuildContext context) {    return Scaffold(      backgroundColor: Colors.white,      body: SafeArea(        child: Padding(          padding: EdgeInsets.symmetric(horizontal: 25),          child: SingleChildScrollView(              child: Column(            mainAxisAlignment: MainAxisAlignment.center,            children: [              CircleAvatar(                radius: 100,                backgroundColor: Colors.transparent,                child: Padding(                  padding: const EdgeInsets.all(8), // Border radius                  child: ClipOval(child: Image.asset('photo/nakhla.jpg')),                ),              ),              Padding(                padding: const EdgeInsets.only(bottom: 10),                child: Text(                  "انشاء طلب ",                  style: GoogleFonts.tajawal(                      fontSize: 30,                      fontWeight: FontWeight.w700,                      color: Color.fromRGBO(103, 74, 47, 0.9)),                ),              ),              Obx(() {                return Text_Field1(                  MyController: order_number,                  hintText: "رقم الطلب".obs,                  icon: typed_order_number.value.isEmpty                      ? Icon(Icons.numbers, color: Colors.black45, size: 30)                      : Icon(                          Icons.numbers,                          color: Color.fromRGBO(144, 195, 70, 0.9),                          size: 30,                        ),                  labelText: "fhgh".obs,                  pass: false,                  onChanged: (String text) {                    typed_order_number.value = text;                  },                  max: 1,                  keyboardType: TextInputType.number,                );              }),              Obx(() {                return Text_Field1(                  MyController: order_Date,                  hintText: "تاريخ الطلب".obs,                  icon: typed_order_Date.value.isEmpty                      ? Icon(Icons.calendar_month,                          color: Colors.black45, size: 30)                      : Icon(                          Icons.calendar_month,                          color: Color.fromRGBO(144, 195, 70, 0.9),                          size: 30,                        ),                  labelText: "".obs,                  pass: false,                  onChanged: (String text) {                    typed_order_Date.value = text;                  },                  max: 1,                  keyboardType: TextInputType.streetAddress,                );              }),              Obx(() {                return Text_Field1(                  MyController: order_name,                  hintText: "اسم الزبون".obs,                  icon: typed_order_name.value.isEmpty                      ? Icon(Icons.person, color: Colors.black45, size: 30)                      : Icon(                          Icons.person,                          color: Color.fromRGBO(144, 195, 70, 0.9),                          size: 30,                        ),                  labelText: "".obs,                  pass: false,                  onChanged: (String text) {                    typed_order_name.value = text;                  },                  max: 1,                  keyboardType: TextInputType.name,                );              }),              Padding(                padding: const EdgeInsets.only(bottom: 10),                child: Obx(() {                  return Text_Field1(                    MyController: order_type,                    hintText: "نوع الطلب".obs,                    icon: typed_order_type.value.isEmpty                        ? Icon(Icons.production_quantity_limits_sharp,                            color: Colors.black45, size: 30)                        : Icon(                            Icons.production_quantity_limits_sharp,                            color: Color.fromRGBO(144, 195, 70, 0.9),                            size: 30,                          ),                    labelText: "".obs,                    pass: false,                    onChanged: (String text) {                      typed_order_type.value = text;                    },                    max: 10,                    keyboardType: TextInputType.multiline,                  );                }),              ),              Obx(() {                return Padding(                  padding: const EdgeInsets.only(bottom: 20),                  child: Container(                    width: 360,                    height: 180,                    child: TextField(                      style: TextStyle(fontSize: 25),                      textDirection: TextDirection.rtl,                      onChanged: (String text) {                        typed_order_details.value = text;                      },                      keyboardType: TextInputType.multiline,                      obscureText: false,                      controller: order_details,                      decoration: InputDecoration(                          filled: true,                          hintTextDirection: TextDirection.rtl,                          border: OutlineInputBorder(                            borderRadius: BorderRadius.circular(18),                            borderSide:                                BorderSide(color: Colors.black, width: 50),                          ),                          enabledBorder: OutlineInputBorder(                            borderRadius: BorderRadius.circular(20.0),                            borderSide: BorderSide(                              width: 2,                              color: Colors.black26,                            ),                          ),                          //errorBorder:InputDecoration.errorText,                          prefixIcon: typed_order_details.value.isEmpty                              ? Icon(Icons.info_outline,                                  color: Colors.black45, size: 30)                              : Icon(                                  Icons.info_outline,                                  color: Color.fromRGBO(144, 195, 70, 0.9),                                  size: 30,                                ),                          hintText: "التفاصيل",                          hintStyle: GoogleFonts.tajawal(                              fontSize: 20, foreground: Paint()),                          contentPadding: const EdgeInsets.only(                              left: 5, right: 5, top: 30, bottom: 0)),                      maxLines: 100,                    ),                  ),                );              }),              Obx(() {                return Text_Field1(                  MyController: order_address,                  hintText: "العنوان".obs,                  icon: typed_order_address.value.isEmpty                      ? Icon(Icons.location_on, color: Colors.black45, size: 30)                      : Icon(                          Icons.location_on,                          color: Color.fromRGBO(144, 195, 70, 0.9),                          size: 30,                        ),                  labelText: "".obs,                  pass: false,                  onChanged: (String text) {                    typed_order_address.value = text;                  },                  max: 1,                  keyboardType: TextInputType.streetAddress,                );              }),              Obx(() {                return Text_Field1(                  MyController: order_phone_number,                  hintText: "رقم التلفون".obs,                  icon: typed_order_phone_number.value.isEmpty                      ? Icon(Icons.phone, color: Colors.black45, size: 30)                      : Icon(                          Icons.phone,                          color: Color.fromRGBO(144, 195, 70, 0.9),                          size: 30,                        ),                  labelText: "".obs,                  pass: false,                  onChanged: (String text) {                    typed_order_phone_number.value = text;                  },                  max: 1,                  keyboardType: TextInputType.phone,                );              }),              Obx(() {                return Text_Field1(                    MyController: order_price,                    hintText: "السعر مع التوصيل".obs,                    icon: typed_order_price.value.isEmpty                        ? Icon(Icons.monetization_on,                            color: Colors.black45, size: 30)                        : Icon(                            Icons.monetization_on,                            color: Color.fromRGBO(144, 195, 70, 0.9),                            size: 30,                          ),                    labelText: "".obs,                    pass: false,                    onChanged: (String text) {                      typed_order_price.value = text;                    },                    max: 1,                    keyboardType: TextInputType.number);              }),              Padding(                padding: const EdgeInsets.only(bottom: 10),                child: Obx(() {                  return Text_Field1(                    MyController: order_Notes,                    hintText: "الملاحظات".obs,                    icon: typed_oorder_Notes.value.isEmpty                        ? Icon(Icons.note, color: Colors.black45, size: 30)                        : Icon(                            Icons.note,                            color: Color.fromRGBO(144, 195, 70, 0.9),                            size: 30,                          ),                    labelText: "".obs,                    pass: false,                    onChanged: (String text) {                      typed_oorder_Notes.value = text;                    },                    max: 10,                    keyboardType: TextInputType.multiline,                  );                }),              ),              /////////////////////////////////              Container(                  margin: EdgeInsets.only(top: 50, bottom: 50),                  width: 320,                  height: 60,                  child: RawMaterialButton(                      onPressed: () {                        flag.value = true;                        Future.delayed(Duration(seconds: 4), () {                          flag.value = false;                          if (vailddata(                                  order_number: typed_order_number,                                  order_Date: typed_order_Date,                                  order_address: typed_order_address,                                  order_details: typed_order_details,                                  order_name: typed_order_name,                                  order_type: typed_order_type,                                  order_phone_number: typed_order_number,                                  order_price: typed_order_price,                                  order_Notes: typed_oorder_Notes) ==                              true) {                            print(senddata(                                order_number: typed_order_number,                                order_Date: typed_order_Date,                                order_address: typed_order_address,                                order_details: typed_order_details,                                order_name: typed_order_name,                                order_type: typed_order_type,                                order_phone_number: typed_order_number,                                order_price: typed_order_price,                                order_Notes: typed_oorder_Notes));                            launchWhatsApp(text: senddata(                                order_number: typed_order_number,                                order_Date: typed_order_Date,                                order_address: typed_order_address,                                order_details: typed_order_details,                                order_name: typed_order_name,                                order_type: typed_order_type,                                order_phone_number: typed_order_number,                                order_price: typed_order_price,                                order_Notes: typed_oorder_Notes),                                number: '7835130173');                          }                        });                      },                      fillColor: Color.fromRGBO(144, 195, 70, 0.9),                      shape: RoundedRectangleBorder(                          borderRadius: BorderRadius.circular(18)),                      child: Obx(() {                        return Padding(                            padding: const EdgeInsets.only(top: 5),                            child: flag.value == true                                ? LoadingFadingLine.circle(                                    size: 80,                                    backgroundColor:                                        Color.fromRGBO(103, 74, 47, 0.9))                                : Text(                                    "ارسال الطلب",                                    style: GoogleFonts.tajawal(                                        fontSize: 25,                                        fontWeight: FontWeight.w700,                                        color: Colors.white),                                  ));                      })))            ],          )),        ),      ),    );  }  launchWhatsApp({required String? text, required String number}) async {    WhatsAppUnilink link = WhatsAppUnilink(      phoneNumber: '964$number',      text: text,    );    await launch('$link');  }  vailddata({    required order_number,    required order_Date,    required order_name,    required order_type,    required order_details,    required order_address,    required order_phone_number,    required order_price,    required order_Notes,  }) {    if (typed_order_number.isEmpty ||        typed_order_Date.isEmpty ||        typed_order_name.isEmpty ||        typed_order_type.isEmpty ||        typed_order_details.isEmpty ||        typed_order_address.isEmpty ||        typed_order_price.isEmpty ||        typed_order_phone_number.isEmpty ||        typed_oorder_Notes.isEmpty) {      Get.showSnackbar(GetSnackBar(          backgroundColor: Colors.red,          duration: Duration(seconds: 2),          messageText: Text(            'النص فارغ ',            textDirection: TextDirection.rtl,            style: GoogleFonts.tajawal(              fontSize: 20,            ),          )));    } else {      return true;    }  }  senddata({    required order_number,    required order_Date,    required order_name,    required order_type,    required order_details,    required order_address,    required order_phone_number,    required order_price,    required order_Notes,  }) {    String page_name ="نخلة للهدايا";    String page_name1 = "اسم البيج / ${page_name}";    String order_number1 = "رقم الطلب / ${order_number}";    String order_Date1 = "تاريخ الطلب / ${order_Date}";    String order_name1 = "اسم الزبون / ${order_name}";    String order_type1 = "نوع الطلب / ${order_type}";    String order_details1 = "التفاصيل / ${order_details}";    String order_address1 = "العنوان / ${order_address}";    String order_phone_number1 = "رقم التلفون / ${order_phone_number}";    String order_price1 = "السعر مع التوصيل / ${order_price} الف ";    String order_Notes1 = "الملاحظات / ${order_Notes}";    String total = "$page_name1 \n\n$order_number1 \n\n $order_Date1 \n\n $order_name1"        " \n\n $order_type1 \n\n $order_details1 \n\n  $order_address1"        " \n\n $order_phone_number1 \n\n $order_price1 \n\n $order_Notes1";    return total;  }}